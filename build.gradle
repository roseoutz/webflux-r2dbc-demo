plugins {
    id 'org.springframework.boot' version '2.7.0-M3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.palantir.docker' version "0.33.0"
    id 'com.palantir.docker-run' version "0.33.0"
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

docker {
    println("gradle docker-plugin start = spring-example:${project.version}")
    name "spring-example:${project.version}"
    files tasks.bootJar.outputs.files
    tag 'DockerHub', 'roseoutz/spring-example:${project.version}'
    noCache true
    buildArgs([
            'JAR_FILE': tasks.bootJar.outputs.files.singleFile.name
    ])
}

dockerRun {
    name "spring-example"
    image "spring-example:${project.version}"
    ports '8090:8080','5005:5005'
    env 'ACTIVE_PROFILE': 'test', "JVM_OPTIONS": '-Xdebug -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005'
    clean true
}

tasks.dockerRun.dependsOn(tasks.docker)

configurations {

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    annotationProcessor("javax.annotation:javax.annotation-api")
    implementation 'org.modelmapper:modelmapper:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation 'com.h2database:h2'
    implementation 'io.r2dbc:r2dbc-h2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
